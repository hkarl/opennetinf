     0 INFO  [main] netinf.common.log.module.LogModule#configure - Successfully initialized the log4j logger from XML
   417 DEMO  [main] netinf.node.StarterNode#main - (NODE ) Please wait while I'm starting up
   418 TRACE [main] netinf.node.StarterNode#start - 
   423 DEBUG [main] netinf.common.security.impl.CryptographyImpl#<init> - Cryptography module created.
   423 DEBUG [main] netinf.common.security.impl.IntegrityImpl#<init> - Integrity Module created.
   424 DEBUG [main] netinf.common.security.impl.IntegrityImpl#<init> - Identity Verification Module created.
   424 TRACE [main] netinf.common.security.impl.CryptographyImpl#<init> - 
   491 TRACE [main] netinf.node.api.impl.NetInfNodeImpl#setResolutionController - Setting ResolutionController
   491 TRACE [main] netinf.node.search.impl.SearchControllerImpl#<init> - 
   493 TRACE [main] netinf.node.api.impl.NetInfNodeImpl#setSearchController - Setting SearchController
   493 TRACE [main] netinf.node.StarterNode#startResolution - 
   493 TRACE [main] netinf.node.resolution.rdf.RDFResolutionService#<init> - 
  1658 ERROR [main] netinf.node.resolution.rdf.RDFResolutionService#<init> - The following error occured while trying to connect to SDB store: SQL Exception while connecting to database: jdbc:mysql://127.0.0.1:3306/netinf_node_data : Communications link failure due to underlying exception: 

** BEGIN NESTED EXCEPTION ** 

java.net.ConnectException
MESSAGE: Connection refused: connect

STACKTRACE:

java.net.ConnectException: Connection refused: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(Unknown Source)
	at java.net.PlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at java.net.Socket.<init>(Unknown Source)
	at java.net.Socket.<init>(Unknown Source)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:256)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:271)
	at com.mysql.jdbc.Connection.createNewIO(Connection.java:2771)
	at com.mysql.jdbc.Connection.<init>(Connection.java:1555)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:285)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at com.hp.hpl.jena.sdb.sql.JDBC.createConnection(JDBC.java:83)
	at com.hp.hpl.jena.sdb.sql.SDBConnectionFactory.createSqlConnection(SDBConnectionFactory.java:108)
	at com.hp.hpl.jena.sdb.sql.SDBConnection.<init>(SDBConnection.java:65)
	at netinf.node.resolution.rdf.RDFResolutionService.<init>(RDFResolutionService.java:132)
	at netinf.node.resolution.rdf.RDFResolutionService$$FastClassByGuice$$7f9b8a4f.newInstance(<generated>)
	at com.google.inject.internal.cglib.reflect.FastConstructor.newInstance(FastConstructor.java:40)
	at com.google.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:60)
	at com.google.inject.ConstructorInjector.construct(ConstructorInjector.java:85)
	at com.google.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:111)
	at com.google.inject.ExposedKeyFactory.get(ExposedKeyFactory.java:58)
	at com.google.inject.InjectorImpl$4$1.call(InjectorImpl.java:758)
	at com.google.inject.InjectorImpl.callInContext(InjectorImpl.java:811)
	at com.google.inject.InjectorImpl$4.get(InjectorImpl.java:754)
	at com.google.inject.spi.ProviderLookup$1.get(ProviderLookup.java:89)
	at com.google.inject.internal.ProviderMethod.get(ProviderMethod.java:95)
	at com.google.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:48)
	at com.google.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:45)
	at com.google.inject.InjectorImpl.callInContext(InjectorImpl.java:811)
	at com.google.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:42)
	at com.google.inject.Scopes$1$1.get(Scopes.java:54)
	at com.google.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:48)
	at com.google.inject.InjectorImpl$4$1.call(InjectorImpl.java:758)
	at com.google.inject.InjectorImpl.callInContext(InjectorImpl.java:804)
	at com.google.inject.InjectorImpl$4.get(InjectorImpl.java:754)
	at com.google.inject.InjectorImpl.getInstance(InjectorImpl.java:793)
	at netinf.node.StarterNode.startResolution(StarterNode.java:152)
	at netinf.node.StarterNode.start(StarterNode.java:139)
	at netinf.node.StarterNode.main(StarterNode.java:85)


** END NESTED EXCEPTION **



Last packet sent to the server was 1 ms ago.
  1659 ERROR [main] netinf.node.resolution.rdf.RDFResolutionService#<init> - Not connected to SDB store
  1841 DEBUG [main] netinf.common.datamodel.rdf.DatamodelFactoryRdf#createModelForInformationObject - Successfully created model for InformationObject
  1854 DEBUG [main] netinf.node.StarterNode#startResolution - Added resolution service 'netinf.node.resolution.rdf.RDFResolutionService'
  1854 DEMO  [main] netinf.node.StarterNode#startResolution - (NODE ) I can resolve via an RDF database
  1854 TRACE [main] netinf.node.StarterNode#startSearch - 
  1855 TRACE [main] netinf.node.search.esfconnector.SearchEsfMessageProcessor#<init> - 
  1856 TRACE [main] netinf.node.search.rdf.SearchServiceRDF#<init> - 
  2858 ERROR [main] netinf.node.search.rdf.SearchServiceRDF#<init> - The following error occured while trying to connect to SDB store: SQL Exception while connecting to database: jdbc:mysql://127.0.0.1:3306/netinf_node_data : Communications link failure due to underlying exception: 

** BEGIN NESTED EXCEPTION ** 

java.net.ConnectException
MESSAGE: Connection refused: connect

STACKTRACE:

java.net.ConnectException: Connection refused: connect
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.PlainSocketImpl.doConnect(Unknown Source)
	at java.net.PlainSocketImpl.connectToAddress(Unknown Source)
	at java.net.PlainSocketImpl.connect(Unknown Source)
	at java.net.SocksSocketImpl.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at java.net.Socket.connect(Unknown Source)
	at java.net.Socket.<init>(Unknown Source)
	at java.net.Socket.<init>(Unknown Source)
	at com.mysql.jdbc.StandardSocketFactory.connect(StandardSocketFactory.java:256)
	at com.mysql.jdbc.MysqlIO.<init>(MysqlIO.java:271)
	at com.mysql.jdbc.Connection.createNewIO(Connection.java:2771)
	at com.mysql.jdbc.Connection.<init>(Connection.java:1555)
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:285)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at java.sql.DriverManager.getConnection(Unknown Source)
	at com.hp.hpl.jena.sdb.sql.JDBC.createConnection(JDBC.java:83)
	at com.hp.hpl.jena.sdb.sql.SDBConnectionFactory.createSqlConnection(SDBConnectionFactory.java:108)
	at com.hp.hpl.jena.sdb.sql.SDBConnection.<init>(SDBConnection.java:65)
	at netinf.node.search.rdf.SearchServiceRDF.<init>(SearchServiceRDF.java:145)
	at netinf.node.search.rdf.SearchServiceRDF$$FastClassByGuice$$87049dc5.newInstance(<generated>)
	at com.google.inject.internal.cglib.reflect.FastConstructor.newInstance(FastConstructor.java:40)
	at com.google.inject.DefaultConstructionProxyFactory$1.newInstance(DefaultConstructionProxyFactory.java:60)
	at com.google.inject.ConstructorInjector.construct(ConstructorInjector.java:85)
	at com.google.inject.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:111)
	at com.google.inject.InjectorImpl$4$1.call(InjectorImpl.java:758)
	at com.google.inject.InjectorImpl.callInContext(InjectorImpl.java:811)
	at com.google.inject.InjectorImpl$4.get(InjectorImpl.java:754)
	at com.google.inject.spi.ProviderLookup$1.get(ProviderLookup.java:89)
	at com.google.inject.internal.ProviderMethod.get(ProviderMethod.java:95)
	at com.google.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:48)
	at com.google.inject.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:45)
	at com.google.inject.InjectorImpl.callInContext(InjectorImpl.java:811)
	at com.google.inject.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:42)
	at com.google.inject.Scopes$1$1.get(Scopes.java:54)
	at com.google.inject.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:48)
	at com.google.inject.InjectorImpl$4$1.call(InjectorImpl.java:758)
	at com.google.inject.InjectorImpl.callInContext(InjectorImpl.java:804)
	at com.google.inject.InjectorImpl$4.get(InjectorImpl.java:754)
	at com.google.inject.InjectorImpl.getInstance(InjectorImpl.java:793)
	at netinf.node.StarterNode.startSearch(StarterNode.java:172)
	at netinf.node.StarterNode.start(StarterNode.java:140)
	at netinf.node.StarterNode.main(StarterNode.java:85)


** END NESTED EXCEPTION **



Last packet sent to the server was 0 ms ago.
  2859 ERROR [main] netinf.node.search.rdf.SearchServiceRDF#<init> - Not connected to SDB store
  2859 TRACE [main] netinf.node.search.impl.SearchControllerImpl#addSearchService - 
  2860 DEBUG [main] netinf.common.datamodel.rdf.DatamodelFactoryRdf#createModelForInformationObject - Successfully created model for InformationObject
  2871 DEBUG [main] netinf.node.StarterNode#startSearch - Added search service 'netinf.node.search.rdf.SearchServiceRDF'
  2872 DEMO  [main] netinf.node.StarterNode#startSearch - (NODE ) I can search via an RDF database
  2872 TRACE [main] netinf.node.StarterNode#startTransfer - 
  2872 TRACE [main] netinf.node.StarterNode#startAccess - 
  2873 TRACE [main] netinf.access.TCPServer#start - 
  2874 DEBUG [main] netinf.node.StarterNode#startAccess - Added access service 'netinf.access.TCPServer'
  2874 DEMO  [main] netinf.node.StarterNode#startAccess - (NODE ) I can be accessed via TCP on port 5000
  2874 TRACE [main] netinf.access.HTTPServer#start - 
  2875 TRACE [Thread-6] netinf.access.TCPServer#run - 
  2876 DEBUG [Thread-6] netinf.access.TCPServer#run - Starting to listen for new connection within the TCPServer on port 5000
  2876 DEBUG [Thread-6] netinf.access.TCPServer#run - In listen loop
  2881 DEBUG [main] netinf.node.StarterNode#startAccess - Added access service 'netinf.access.HTTPServer'
  2882 DEMO  [main] netinf.node.StarterNode#startAccess - (NODE ) I can be accessed via HTTP on port 8080
  2882 DEMO  [main] netinf.node.StarterNode#main - (NODE ) I'm ready
  2882 INFO  [main] netinf.node.StarterNode#main - NetInfNode successfully started
