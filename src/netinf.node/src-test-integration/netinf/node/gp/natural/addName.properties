# Log4j properties.

log4j.rootLogger=TRACE, A1, SOCK

log4j.appender.A1=org.apache.log4j.ConsoleAppender
log4j.appender.A1.layout=org.apache.log4j.PatternLayout
log4j.appender.A1.layout.ConversionPattern=%6r %-5p [%t] %l - %m%n

log4j.appender.SOCK=org.apache.log4j.net.SocketAppender
log4j.appender.SOCK.RemoteHost=localhost
log4j.appender.SOCK.Port=4560
log4j.appender.SOCK.LocationInfo=true
log4j.appender.SOCK.Application=addN

event_service.host = localhost
event_service.port = 5001

# The identities of a netInfNode
identity.nodeIdentity = ni:HASH_OF_PK=123~UNIQUE_LABEL=addName

access.tcp.port = 6000

cc.tcp.host = 127.0.0.1
cc.tcp.port = 6000

# Global timeout for search services
search_timeout = 10000

# Resolution Service RDF
resolution_rdf_db_host = 127.0.0.1
resolution_rdf_db_port = 3306
resolution_rdf_db_dbname = netinf_node_data
resolution_rdf_db_user = sdbuser
resolution_rdf_db_pw = sdbpass
resolution_rdf_db_layout = layout2/hash
resolution_rdf_db_type = MySQL
resolution_rdf_db_driver = com.mysql.jdbc.Driver

# GP related stuff
netinf.gp.interface.host = localhost
netinf.gp.interface.port = 6666

# Everything concerning capabilities

# The capability definition works as follows:
# 'netinf.gp.capabilities' defines a comma separated list of capabilities
# e.g netinf.gp.capabilities = first, second, third
# Each capability might have arbitrary many properties (again comma separated list)
# e.g netinf.gp.capability.first = one, two, three
# Each property might have arbitrary many values
# netinf.gp.capability.first.one = value1, value2

# possible values are
# 	function: search, resolution_local, resolution_global, resolution
# 	bandwidth: weak, medium, high
# 	position: mobile, fixxed 

netinf.gp.capabilities = netinf
netinf.gp.capabilities.netinf = function, bandwidth, position
netinf.gp.capabilities.netinf.function = search, resolution_global
netinf.gp.capabilities.netinf.bandwidth = weak
netinf.gp.capabilities.netinf.position = fixxed
